name: Build
on:
  # Trigger the workflow on pushes to only the 'master' branch (this avoids duplicate checks being run e.g., for dependabot pull requests)
  push:
    branches: [ master ]
  # Trigger the workflow on any pull request
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Prepare the environment and build the plugin
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up the Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Build plugin
      - name: Build plugin
        run: ./gradlew buildPlugin

  # Run tests and upload a code coverage report
  test:
    name: Test (${{ matrix.os }})
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@v1.3.1
        if: runner.os == 'Linux'
        with:
          tool-cache: false
          large-packages: false

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up the Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      # Run tests
      - name: Run Tests
        run: ./gradlew check

      # Collect Tests Result of failed tests
      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-result-${{ matrix.os }}
          path: ${{ github.workspace }}/build/reports/tests

  # Run Qodana inspections and provide a report
  inspectCode:
      name: Inspect code
      needs: [ build ]
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request'

      permissions:
        contents: write
        checks: write
        pull-requests: write
      steps:

        # Free GitHub Actions Environment Disk Space
        - name: Maximize Build Space
          uses: jlumbroso/free-disk-space@v1.3.1
          with:
            tool-cache: false
            large-packages: false

        # Check out the current repository
        - name: Fetch Sources
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
            fetch-depth: 0  # a full history is required for pull request analysis

        # Set up the Java environment for the next steps
        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: zulu
            java-version: 21

        # Run Qodana inspections
        - name: Qodana - Code Inspection
          uses: JetBrains/qodana-action@v2025.1.1
          with:
            args: --baseline,./.qodana/baseline.sarif.json
            cache-default-branch-only: true

        - name: Qodana - Publish Results
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json

  # Run plugin structure verification along with IntelliJ Plugin Verifier
  verify:
    name: Verify plugin
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up the Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      # Run Verify Plugin task and IntelliJ Plugin Verifier tool
      - name: Run Plugin Verification tasks
        run: ./gradlew verifyPlugin

      # Collect Plugin Verifier Result
      - name: Collect Plugin Verifier Result
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pluginVerifier-result
          path: ${{ github.workspace }}/build/reports/pluginVerifier
